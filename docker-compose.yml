services:
  web: # Rails application
    image: timesynk-web:latest
    build:
      context: .
      target: web
      args:
        - RAILS_ENV=production
    env_file:
      - .env.production
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY_FILE: /run/secrets/rails_master_key
    volumes:
      - storage:/rails/storage
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    restart: unless-stopped
    secrets:
      - rails_master_key
    depends_on:
      - postgres
    command: ./bin/rails server ${IGNORE_SEED:+--ignore-seed}

  postgres: # Database
    image: postgres:17
    env_file:
      - .env.production
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis: # Redis server
    image: redis:8
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  sidekiq: # Background job processor
    build:
      context: .
      target: sidekiq
    command: bundle exec sidekiq
    depends_on:
      - redis
      - postgres
    env_file:
      - .env.production
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY_FILE: /run/secrets/rails_master_key
    secrets:
      - rails_master_key
    volumes:
      - storage:/rails/storage
    restart: unless-stopped

volumes:
  storage:
    driver: local
    driver_opts:
      type: none
      device: ./.volumes/storage
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ./.volumes/postgres_data
      o: bind
  redis-data:
    driver: local
    driver_opts:
      type: none
      device: ./.volumes/redis_data
      o: bind

secrets:
  rails_master_key:
    file: config/credentials/production.key
  postgres_user:
    file: config/secrets/postgres_user.secret
  postgres_password:
    file: config/secrets/postgres_password.secret